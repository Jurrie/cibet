-- ----------------------------------------------
-- DROP STATEMENTS
-- ----------------------------------------------
--DROP TABLE CIB_RESOURCEPARAMETER;
--DROP TABLE CIB_ARCHIVE;
--DROP TABLE CIB_DCCONTROLLABLE;
--DROP TABLE CIB_LOCKEDOBJECT;
--DROP TABLE CIB_EVENTRESULT;
--DROP TABLE CIB_SEQUENCE;

-- ----------------------------------------------
-- ARCHIVE
-- ----------------------------------------------

CREATE TABLE CIB_ARCHIVE ( 
	ARCHIVEID VARCHAR(255) NOT NULL, 
	REMARK VARCHAR(255), 
	RESULT BLOB, 
	CHECKSUM VARCHAR(255), 
	CONTROLEVENT VARCHAR(50), 
	TARGETTYPE VARCHAR(255), 
	CREATEUSER VARCHAR(50), 
	CREATEDATE DATETIME, 
	TENANT VARCHAR(255), 
	CASEID VARCHAR(60), 
	TARGET BLOB, 
	PRIMARYKEYID VARCHAR(50), 
	METHOD VARCHAR(255), 
	INVOKERCLASS VARCHAR(255), 
	INVOKERPARAM VARCHAR(255), 
	EXECUTIONSTATUS VARCHAR(50) NOT NULL, 
	VERSION BIGINT NOT NULL, 
	RESOURCEHANDLERCLASS VARCHAR(255), 
	ENCRYPTED smallint NOT NULL DEFAULT 0,
	KEYREFERENCE VARCHAR(255),
	UNIQUEID VARCHAR(255),
	GROUPID VARCHAR(255),
	PRIMARY KEY (ARCHIVEID) 
);

-- ----------------------------------------------
-- DC
-- ----------------------------------------------

CREATE TABLE CIB_DCCONTROLLABLE ( 
	DCCONTROLLABLEID VARCHAR(255) NOT NULL, 
	CASEID VARCHAR(60), 
	CONTROLEVENT VARCHAR(50), 
	CREATEUSER VARCHAR(50) NOT NULL, 
	CREATEDATE DATETIME NOT NULL, 
	CREATEADDRESS VARCHAR(255), 
	CREATEREMARK VARCHAR(255), 
	TARGETTYPE VARCHAR(255), 
	TARGET BLOB, 
	TENANT VARCHAR(255), 
	ACTUATOR VARCHAR(100) NOT NULL, 
	FIRSTAPPROVUSER VARCHAR(50), 
	FIRSTAPPROVALDATE DATETIME, 
	FIRSTAPPROVADDR VARCHAR(255), 
	FIRSTAPPROVREMARK VARCHAR(255), 
	APPROVALUSER VARCHAR(50), 
	APPROVALDATE DATETIME, 
	APPROVALADDRESS VARCHAR(255), 
	APPROVALREMARK VARCHAR(255),
	EXECUTIONSTATUS VARCHAR(50) NOT NULL, 
	VERSION BIGINT NOT NULL, 
	PRIMARYKEYID VARCHAR(50), 
	METHOD VARCHAR(255), 
	INVOKERCLASS VARCHAR(255), 
	INVOKERPARAM VARCHAR(255), 
	RESOURCEHANDLERCLASS VARCHAR(255), 
	RESULT BLOB, 
	ENCRYPTED smallint NOT NULL DEFAULT 0,
	KEYREFERENCE VARCHAR(255),
	UNIQUEID VARCHAR(255),
	SCHEDULEDDATE DATETIME,
	EXECUTIONDATE DATETIME,
	GROUPID VARCHAR(255),
	PRIMARY KEY (DCCONTROLLABLEID) 
);

CREATE TABLE CIB_RESOURCEPARAMETER ( 
	PARAMETERID 		VARCHAR(255) NOT NULL, 
	NAME 					VARCHAR(255) NOT NULL, 
	PARAMETERTYPE 		VARCHAR(50) NOT NULL, 
	CLASSNAME 			VARCHAR(255) NOT NULL, 
	ENCODEDVALUE 		BLOB, 
	SEQUENCE 			INTEGER NOT NULL, 
	DCCONTROLLABLEID 	VARCHAR(255), 
	ARCHIVEID 			VARCHAR(255), 
	STRINGVALUE VARCHAR(255),
	FOREIGN KEY (ARCHIVEID) REFERENCES CIB_ARCHIVE (ARCHIVEID),
	FOREIGN KEY (DCCONTROLLABLEID) REFERENCES CIB_DCCONTROLLABLE (DCCONTROLLABLEID),
	PRIMARY KEY (PARAMETERID) 
);

-- ----------------------------------------------
-- LOCK
-- ----------------------------------------------

CREATE TABLE CIB_LOCKEDOBJECT (
	LOCKEDOBJECTID 	VARCHAR(255) NOT NULL,
	LOCKDATE 			DATETIME NOT NULL,
	LOCKREMARK 			VARCHAR(255),
	LOCKEDBY 			VARCHAR(50) NOT NULL,
	LOCKSTATE 			VARCHAR(50) NOT NULL,
	OBJECTID 			VARCHAR(50),
	OBJECT				BLOB, 
	TARGETTYPE 			VARCHAR(255), 
	LOCKEDEVENT 		VARCHAR(50) NOT NULL, 
	METHOD 				VARCHAR(255), 
	TENANT 				VARCHAR(255), 
	UNLOCKDATE 			DATETIME,
	UNLOCKREMARK 		VARCHAR(255),
	UNLOCKEDBY 			VARCHAR(50),
	VERSION 				BIGINT NOT NULL,
	primary key(LOCKEDOBJECTID)
);

CREATE TABLE CIB_EVENTRESULT (
	EVENTRESULTID 		VARCHAR(255) NOT NULL,
   PARENTRESULT_ID 	VARCHAR(255),
   EVENT 				VARCHAR(50) NOT NULL,
   RESOURC 				VARCHAR(255),
   SENSOR 				VARCHAR(50) NOT NULL,
   SETPOINTS 			VARCHAR(255),
   ACTUATORS 			VARCHAR(255),
   EXECUTIONSTATUS 	VARCHAR(50) NOT NULL,
   TRACK_TENANT 		VARCHAR(255),
   TRACK_USER 			VARCHAR(50),
   EXECUTIONTIME 		DATETIME NOT NULL,
   CASEID 				VARCHAR(60),
   PRIMARY KEY (EVENTRESULTID),
   CONSTRAINT FKEVENTRESULT_PARENT FOREIGN KEY (PARENTRESULT_ID) REFERENCES CIB_EVENTRESULT
   (EVENTRESULTID)
);

CREATE TABLE CIB_SEQUENCE (
	SEQUENCE				VARCHAR(100) NOT NULL,
	HI						BIGINT, 
	LASTUPDATE				DATETIME,
	PRIMARY KEY(SEQUENCE)
);
      